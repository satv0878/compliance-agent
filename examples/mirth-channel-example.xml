<?xml version="1.0" encoding="UTF-8"?>
<channel version="3.12.0">
    <id>compliance-monitor</id>
    <name>Compliance Monitor</name>
    <description>Passive monitoring channel for compliance agent</description>
    
    <sourceConnector version="3.12.0">
        <name>TCP Listener</name>
        <properties class="com.mirth.connect.connectors.tcp.TcpReceiverProperties">
            <pluginProperties/>
            <listenerConnectorProperties>
                <host>0.0.0.0</host>
                <port>6661</port>
            </listenerConnectorProperties>
            <serverMode>true</serverMode>
            <remoteAddress>0.0.0.0</remoteAddress>
            <remotePort>6661</remotePort>
            <overrideLocalBinding>false</overrideLocalBinding>
            <reconnectInterval>5000</reconnectInterval>
            <receiveTimeout>0</receiveTimeout>
            <bufferSize>65536</bufferSize>
            <maxConnections>10</maxConnections>
            <keepConnectionOpen>true</keepConnectionOpen>
            <dataTypeBinary>false</dataTypeBinary>
            <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
            <respondOnNewConnection>0</respondOnNewConnection>
            <responseAddress></responseAddress>
            <responsePort></responsePort>
        </properties>
        
        <transformer version="3.12.0">
            <steps>
                <step>
                    <sequenceNumber>0</sequenceNumber>
                    <name>Parse HL7</name>
                    <script>// Parse HL7 message
var hl7Message = message.toString();
msg = hl7Message;</script>
                    <type>JavaScript</type>
                    <data class="map">
                        <entry>
                            <string>Script</string>
                            <string>// Parse HL7 message
var hl7Message = message.toString();
msg = hl7Message;</string>
                        </entry>
                    </data>
                </step>
            </steps>
            <inboundDataType>HL7V2</inboundDataType>
            <outboundDataType>HL7V2</outboundDataType>
            <inboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties">
                <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties">
                    <handleRepetitions>false</handleRepetitions>
                    <handleSubcomponents>false</handleSubcomponents>
                    <useStrictParser>false</useStrictParser>
                    <useStrictValidation>false</useStrictValidation>
                    <stripNamespaces>false</stripNamespaces>
                </serializationProperties>
            </inboundProperties>
            <outboundProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2DataTypeProperties">
                <serializationProperties class="com.mirth.connect.plugins.datatypes.hl7v2.HL7v2SerializationProperties">
                    <handleRepetitions>false</handleRepetitions>
                    <handleSubcomponents>false</handleSubcomponents>
                    <useStrictParser>false</useStrictParser>
                    <useStrictValidation>false</useStrictValidation>
                    <stripNamespaces>false</stripNamespaces>
                </serializationProperties>
            </outboundProperties>
        </transformer>
        
        <filter version="3.12.0">
            <rules>
                <rule>
                    <sequenceNumber>0</sequenceNumber>
                    <name>Accept All</name>
                    <condition>ACCEPT</condition>
                    <script></script>
                    <operator>AND</operator>
                    <data class="map">
                        <entry>
                            <string>Script</string>
                            <string></string>
                        </entry>
                    </data>
                </rule>
            </rules>
        </filter>
        
        <transportName>TCP Listener</transportName>
        <mode>SOURCE</mode>
        <enabled>true</enabled>
        <waitForPrevious>true</waitForPrevious>
    </sourceConnector>
    
    <destinationConnectors>
        <!-- Original destination (your existing system) -->
        <connector version="3.12.0">
            <name>Original Destination</name>
            <properties class="com.mirth.connect.connectors.tcp.TcpSenderProperties">
                <pluginProperties/>
                <destinationConnectorProperties>
                    <queueEnabled>false</queueEnabled>
                    <sendTimeout>30000</sendTimeout>
                    <template>${message.encodedData}</template>
                    <retryIntervalMillis>10000</retryIntervalMillis>
                    <regenerateTemplate>false</regenerateTemplate>
                    <retryCount>0</retryCount>
                    <rotate>false</rotate>
                    <includeFilterTransformer>false</includeFilterTransformer>
                    <threadCount>1</threadCount>
                    <threadAssignmentVariable></threadAssignmentVariable>
                    <validateResponse>false</validateResponse>
                    <resourceIds class="linked-hash-map">
                        <entry>
                            <string>Default Resource</string>
                            <string>[Default Resource]</string>
                        </entry>
                    </resourceIds>
                    <queueBufferSize>1000</queueBufferSize>
                    <reattachAfterMillis>5000</reattachAfterMillis>
                </destinationConnectorProperties>
                <transmissionModeProperties class="com.mirth.connect.connectors.tcp.TcpTransmissionModeProperties">
                    <pluginProperties/>
                    <transmissionMode>MLLP</transmissionMode>
                    <remoteAddress>your-existing-system</remoteAddress>
                    <remotePort>6660</remotePort>
                    <overrideLocalBinding>false</overrideLocalBinding>
                    <reconnectInterval>5000</reconnectInterval>
                    <receiveTimeout>30000</receiveTimeout>
                    <bufferSize>65536</bufferSize>
                    <maxRetries>5</maxRetries>
                    <keepConnectionOpen>true</keepConnectionOpen>
                    <checkRemoteHost>false</checkRemoteHost>
                    <responseTimeout>30000</responseTimeout>
                    <ignoreResponse>false</ignoreResponse>
                    <queueOnResponseTimeout>true</queueOnResponseTimeout>
                    <dataTypeBinary>false</dataTypeBinary>
                    <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
                    <template>${message.encodedData}</template>
                </transmissionModeProperties>
            </properties>
            
            <transformer version="3.12.0">
                <steps/>
                <inboundDataType>HL7V2</inboundDataType>
                <outboundDataType>HL7V2</outboundDataType>
            </transformer>
            
            <responseTransformer version="3.12.0">
                <steps/>
                <inboundDataType>HL7V2</inboundDataType>
                <outboundDataType>HL7V2</outboundDataType>
            </responseTransformer>
            
            <filter version="3.12.0">
                <rules>
                    <rule>
                        <sequenceNumber>0</sequenceNumber>
                        <name>Accept All</name>
                        <condition>ACCEPT</condition>
                        <script></script>
                        <operator>AND</operator>
                    </rule>
                </rules>
            </filter>
            
            <transportName>TCP Writer</transportName>
            <mode>DESTINATION</mode>
            <enabled>true</enabled>
            <waitForPrevious>true</waitForPrevious>
        </connector>
        
        <!-- Compliance Agent destination -->
        <connector version="3.12.0">
            <name>Compliance Agent</name>
            <properties class="com.mirth.connect.connectors.http.HttpSenderProperties">
                <pluginProperties/>
                <destinationConnectorProperties>
                    <queueEnabled>true</queueEnabled>
                    <sendTimeout>30000</sendTimeout>
                    <template>${JSON.stringify({
    "channel_id": channelId,
    "payload": Base64.encode(connectorMessage.getEncodedData()),
    "message_id": connectorMessage.getMessageId(),
    "timestamp": new Date().toISOString()
})}</template>
                    <retryIntervalMillis>10000</retryIntervalMillis>
                    <regenerateTemplate>false</regenerateTemplate>
                    <retryCount>3</retryCount>
                    <rotate>false</rotate>
                    <includeFilterTransformer>false</includeFilterTransformer>
                    <threadCount>1</threadCount>
                    <threadAssignmentVariable></threadAssignmentVariable>
                    <validateResponse>false</validateResponse>
                    <resourceIds class="linked-hash-map">
                        <entry>
                            <string>Default Resource</string>
                            <string>[Default Resource]</string>
                        </entry>
                    </resourceIds>
                    <queueBufferSize>1000</queueBufferSize>
                    <reattachAfterMillis>5000</reattachAfterMillis>
                </destinationConnectorProperties>
                <url>http://compliance-agent:8000/ingest/hl7</url>
                <method>POST</method>
                <multipart>false</multipart>
                <useAuthentication>false</useAuthentication>
                <username></username>
                <password></password>
                <headers>
                    <entry>
                        <string>Authorization</string>
                        <string>Bearer your-token-here</string>
                    </entry>
                    <entry>
                        <string>Content-Type</string>
                        <string>application/json</string>
                    </entry>
                </headers>
                <parameters class="linked-hash-map"/>
                <useHeadersVariable>false</useHeadersVariable>
                <headersVariable></headersVariable>
                <useParametersVariable>false</useParametersVariable>
                <parametersVariable></parametersVariable>
                <responseXmlBody>false</responseXmlBody>
                <responseParseMultipart>false</responseParseMultipart>
                <responseIncludeMetadata>false</responseIncludeMetadata>
                <responseBinaryMimeTypes>application/.*(?i:zip|tar|gzip|rar|7z|bzip2|xz|compress)</responseBinaryMimeTypes>
                <responseBinaryMimeTypesRegex>true</responseBinaryMimeTypesRegex>
                <dataTypeBinary>false</dataTypeBinary>
                <charsetEncoding>DEFAULT_ENCODING</charsetEncoding>
                <socketTimeout>30000</socketTimeout>
            </properties>
            
            <transformer version="3.12.0">
                <steps/>
                <inboundDataType>HL7V2</inboundDataType>
                <outboundDataType>HL7V2</outboundDataType>
            </transformer>
            
            <responseTransformer version="3.12.0">
                <steps>
                    <step>
                        <sequenceNumber>0</sequenceNumber>
                        <name>Log Response</name>
                        <script>// Log compliance agent response
if (responseStatus != "200") {
    logger.error("Compliance Agent failed: " + responseStatus + " - " + responseStatusLine);
} else {
    logger.info("Message sent to compliance agent: " + connectorMessage.getMessageId());
}</script>
                        <type>JavaScript</type>
                        <data class="map">
                            <entry>
                                <string>Script</string>
                                <string>// Log compliance agent response
if (responseStatus != "200") {
    logger.error("Compliance Agent failed: " + responseStatus + " - " + responseStatusLine);
} else {
    logger.info("Message sent to compliance agent: " + connectorMessage.getMessageId());
}</string>
                            </entry>
                        </data>
                    </step>
                </steps>
                <inboundDataType>HL7V2</inboundDataType>
                <outboundDataType>HL7V2</outboundDataType>
            </responseTransformer>
            
            <filter version="3.12.0">
                <rules>
                    <rule>
                        <sequenceNumber>0</sequenceNumber>
                        <name>Accept All</name>
                        <condition>ACCEPT</condition>
                        <script></script>
                        <operator>AND</operator>
                    </rule>
                </rules>
            </filter>
            
            <transportName>HTTP Writer</transportName>
            <mode>DESTINATION</mode>
            <enabled>true</enabled>
            <waitForPrevious>false</waitForPrevious>
        </connector>
    </destinationConnectors>
    
    <preprocessingScript>// Preprocessing script.
// This script will be executed once when the channel is deployed.
// Only the logger and globalMap objects are available in this script.
// You can use the logger to output information to the server logs.

return;</preprocessingScript>
    <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as "Postprocessor" in the response map
return;</postprocessingScript>
    <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
    <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
    
    <properties>
        <property name="clearGlobalChannelMap">true</property>
        <property name="dont_store_filtered">false</property>
        <property name="encryptData">false</property>
        <property name="error_messages_only">false</property>
        <property name="initialState">STARTED</property>
        <property name="max_message_age">-1</property>
        <property name="store_messages">true</property>
        <property name="store_source_transformed">false</property>
        <property name="synchronous">true</property>
        <property name="transactional">false</property>
        <property name="wait_for_previous">true</property>
    </properties>
    
    <revision>1</revision>
    <lastModified>
        <time>1697376000000</time>
        <timezone>Europe/Berlin</timezone>
    </lastModified>
</channel>