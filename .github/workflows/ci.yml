name: CI/CD Pipeline

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Run Python tests
      run: |
        pytest tests/ -v --cov=services/
    
    - name: Build Go hash writer
      run: |
        cd services/hashwriter
        go mod tidy
        go build -v ./...
        go test -v ./...
    
    - name: Build Docker images
      run: |
        docker-compose build
    
    - name: Run integration tests
      run: |
        docker-compose up -d
        sleep 30
        python scripts/test_ingestion.py
        docker-compose down

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  docker-build:
    runs-on: ubuntu-latest
    needs: [test, security-scan]
    if: github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push Docker images
      run: |
        docker-compose build
        docker tag compliance-agent_ingress-service ghcr.io/satv0878/compliance-agent/ingress:latest
        docker tag compliance-agent_parser-service ghcr.io/satv0878/compliance-agent/parser:latest
        docker tag compliance-agent_validator-service ghcr.io/satv0878/compliance-agent/validator:latest
        docker tag compliance-agent_hashwriter-service ghcr.io/satv0878/compliance-agent/hashwriter:latest
        docker tag compliance-agent_reporter-service ghcr.io/satv0878/compliance-agent/reporter:latest
        
        docker push ghcr.io/satv0878/compliance-agent/ingress:latest
        docker push ghcr.io/satv0878/compliance-agent/parser:latest
        docker push ghcr.io/satv0878/compliance-agent/validator:latest
        docker push ghcr.io/satv0878/compliance-agent/hashwriter:latest
        docker push ghcr.io/satv0878/compliance-agent/reporter:latest